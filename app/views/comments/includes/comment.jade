article.commentItem(itemscope itemtype="http://schema.org/Article" id="comment_" + comment._id class=comment.isDeleted ? "deleted" : "" )
  
  .textHtml(itemprop="articleBody")!= comment.textHtml
  meta(itemprop="headline" content=comment.metaTitle)
  .meta
    if comment.repliesCount
      a.repliesCount.js-comment-replies(href="/c/" + comment._id data-id=comment._id.toString())
        b= comment.repliesCount
        = " replies"
    
    if currentUser
      a.reply.js-comment-reply(href="#" data-id=comment._id.toString()) reply
      
    a.creator(class=(adminName === comment.creator.username ? "admin" : "") href="/" + comment.creator.username)
      = "@"
      = comment.creator.username
    a.createdAt(href="/c/" + comment._id itemprop="datePublished" content=moment(comment.createdAt).format())= moment(comment.createdAt).toNow(true)
  
    if !comment.parentId.equals(ROOT_PARENT_ID)
      a.parentId(href="/c/" + comment.parentId) parent

    if !comment.isDeleted && currentUser && currentUser.can('delete', comment)
      .controls
        .dropdown
          .handler.js-dropdown-handler(tabindex=1)
            span.icon-keyboard_control
          .menu
            a.js-comment-delete(href="#delete" data-id=comment._id.toString()) delete

  .replies